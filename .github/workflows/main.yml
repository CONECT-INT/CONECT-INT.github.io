# This is a basic workflow to help you get started with Actions
# based on https://github.com/Chrede88/cjsolsen.com/blob/master/.github/workflows/main.yml
# https://github.com/wowchemy/wowchemy-hugo-themes/blob/main/.github/workflows/build-test-site.yaml
# https://www.jameswright.xyz/post/20200409/deploy_wowchemy_to_githubio/

name: Build site and deploy to GitHub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [15.x]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true  # Fetch any Git submodules (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

  hugo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true  # Fetch any Git submodules (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.95.0'
          extended: true

      - name: Build
        run: hugo --minify

      - name: Build site and push to release branch
        uses: aormsby/hugo-deploy-to-pages@v2.1
        id: build_step  # <<for outputs>>
        with:
          source_branch: 'main'
          #release_branch: 'bon-voyage'
          submodule_release_branch: 'subbed' # <<only provide if you are publishing to directory with git submodule>>
          # full_rebuild: true
          hugo_publish_directory: 'public' #  <<publish to another directory if needed>>
          # hugo_build_options: '-D --minify --ignoreCache' <<hugo build cis customizable>>
          # commit_message: "I love this action."
          # test_mode: true <<enable to run a few verification tests before your first live run>>

          # <<lots of other options!>>

      - name: Check if new build was made
        if: steps.build.outputs.was_new_build_created == 'true'
        run: echo "YAAASSSS new build."
        if: steps.build.outputs.was_new_build_created == 'false'
        run: echo "NOOOOOOO new build."
